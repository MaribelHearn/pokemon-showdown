#!/usr/bin/env node

try {
	RegExp("\\p{Emoji}", "u");
} catch (e) {
	console.log("We require Node.js version 10 or later; you're using " + process.version);
	process.exit(1);
}

var fs = require('fs');
var path = require('path');
var build = require('./dev-tools/build');

build.sucrase('./sim', './.sim-dist');
build.sucrase('./lib', './.lib-dist');
var replacement = {regex: new RegExp(`(require\\\(.*?)(sim|lib)(.*?\\\))`, 'g'), replace: `$1.$2-dist$3`};
// NOTE: replace is asynchronous - add additional replacements for the same path in one call instead of making multiple calls.
build.replace(path.join(__dirname, '.sim-dist'), [replacement]);
if (process.argv[2] === 'full') {
	build.sucrase('./dev-tools', './.dev-tools-dist');
	build.replace(path.join(__dirname, '.dev-tools-dist'), [replacement]);
}

// Make sure config.js exists. If not, copy it over synchronously from
// config-example.js, since it's needed before we can start the server
try {
	require.resolve('./config/config');
} catch (err) {
	if (err.code !== 'MODULE_NOT_FOUND') throw err; // should never happen

	console.log('config.js does not exist. Creating one with default settings...');
	fs.writeFileSync(
		path.resolve(__dirname, 'config/config.js'),
		fs.readFileSync(path.resolve(__dirname, 'config/config-example.js'))
	);
}
